abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("all-native", "M+C", "MG", "others"), fill = c(1, 4, 5, 6), bty = "n", border = NA)
table(col)
5^4
625*6*5
gpc$V1[col == 5]
col <- rep(0, nrow(cpg))
col[!grepl("M", cpg$V1)] <- 1#all native
col[grepl("M", cpg$V1) & grepl("C", cpg$V1)] <- 4#M+C
col[col != 1 & col != 4 & grepl("MG", cpg$V1) $ !grepl("MA", cpg$V1) & !grepl("MT", cpg$V1) & !grepl("MM", cpg$V1)] <- 5#MG
col[col == 0] <- 6#all-M but not MG
plot(cpg$V2, gpc$V2, xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.25, col = col, main = "")
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("all-native", "M+C", "MG", "others"), fill = c(1, 4, 5, 6), bty = "n", border = NA)
gpc$V1[col == 5]
col <- rep(0, nrow(cpg))
col[!grepl("M", cpg$V1)] <- 1#all native
table(col)
col <- rep(0, nrow(cpg))
col[!grepl("M", cpg$V1)] <- 1#all native
col[col != 1 & !grepl("C", cpg$V1) & grepl("MG", cpg$V1) $ !grepl("MA", cpg$V1) & !grepl("MT", cpg$V1) & !grepl("MM", cpg$V1)] <- 4#MG
col[col == 0] <- 5#M-containing but not MG
col <- rep(0, nrow(cpg))
col[!grepl("M", cpg$V1)] <- 1#all native
col[col != 1 & !grepl("C", cpg$V1) & grepl("MG", cpg$V1) & !grepl("MA", cpg$V1) & !grepl("MT", cpg$V1) & !grepl("MM", cpg$V1)] <- 4#MG
col[col == 0] <- 5#M-containing but not MG
table(col)
cpg$V1[col == 4]
grepl("C", cpg$V1[col == 4])
sum(grepl("C", cpg$V1[col == 4]))
plot(cpg$V2, gpc$V2, xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.25, col = col, main = "")
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("all-native", "M+C", "MG", "others"), fill = c(1, 4, 5, 6), bty = "n", border = NA)
plot(cpg$V2, gpc$V2, xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.25, col = col, main = "")
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("all-native", "MG", "others"), fill = c(1, 4, 5), bty = "n", border = NA)
pdf("r9.4_450bps.6mer.template.model.pdf", width = 12, height = 4)
par(mfrow = c(1, 3), mar = c(5, 5, 1, 1))
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(gpc$V2[match(native$V1, gpc$V1)], native$V2, xlab = "gpc model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
col <- rep(0, nrow(cpg))
col[!grepl("M", cpg$V1)] <- 1#all native
col[col != 1 & !grepl("C", cpg$V1) & grepl("MG", cpg$V1) & !grepl("MA", cpg$V1) & !grepl("MT", cpg$V1) & !grepl("MM", cpg$V1)] <- 4#MG
col[col == 0] <- 8#M-containing but not MG
plot(cpg$V2, gpc$V2, xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.25, col = col, main = "")
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("all-native", "MG", "others"), fill = c(1, 4, 8), bty = "n", border = NA)
dev.off()
pdf("r9.4_450bps.6mer.template.model.pdf", width = 12, height = 4)
par(mfrow = c(1, 3), mar = c(5, 5, 1, 1))
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(gpc$V2[match(native$V1, gpc$V1)], native$V2, xlab = "gpc model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
col <- rep(0, nrow(cpg))
col[!grepl("M", cpg$V1)] <- 1#all native
col[col != 1 & !grepl("C", cpg$V1) & grepl("MG", cpg$V1) & !grepl("MA", cpg$V1) & !grepl("MT", cpg$V1) & !grepl("MM", cpg$V1)] <- 4#MG
col[col == 0] <- 8#M-containing but not MG
plot(cpg$V2, gpc$V2, xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = col, main = "")
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("all-native", "MG", "others"), fill = c(1, 4, 8), bty = "n", border = NA)
dev.off()
pdf("r9.4_450bps.6mer.template.model.pdf", width = 12, height = 8)
par(mfrow = c(2, 3), mar = c(5, 5, 1, 1))
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(gpc$V2[match(native$V1, gpc$V1)], native$V2, xlab = "gpc model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
col <- rep(0, nrow(cpg))
col[!grepl("M", cpg$V1)] <- 1#all native
col[col != 1 & !grepl("C", cpg$V1) & grepl("MG", cpg$V1) & !grepl("MA", cpg$V1) & !grepl("MT", cpg$V1) & !grepl("MM", cpg$V1)] <- 4#MG
col[col == 0] <- 8#M-containing but not MG
plot(cpg$V2, gpc$V2, xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = col, main = "")
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("all-native", "MG", "others"), fill = c(1, 4, 8), bty = "n", border = NA)
plot(cpg$V2[col == 1], gpc$V2[col == 1], xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[col == 4], gpc$V2[col == 4], xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = 4, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[col == 8], gpc$V2[col == 8], xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = 8, main = "")
abline(0, 1, NULL, NULL, col = 2)
dev.off()
pdf("r9.4_450bps.6mer.template.model.pdf", width = 9, height = 6)
par(mfrow = c(2, 3), mar = c(5, 5, 1, 1))
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(gpc$V2[match(native$V1, gpc$V1)], native$V2, xlab = "gpc model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
col <- rep(0, nrow(cpg))
col[!grepl("M", cpg$V1)] <- 1#all native
col[col != 1 & !grepl("C", cpg$V1) & grepl("MG", cpg$V1) & !grepl("MA", cpg$V1) & !grepl("MT", cpg$V1) & !grepl("MM", cpg$V1)] <- 4#MG
col[col == 0] <- 8#M-containing but not MG
plot(cpg$V2, gpc$V2, xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = col, main = "")
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("all-native", "MG", "others"), fill = c(1, 4, 8), bty = "n", border = NA)
plot(cpg$V2[col == 1], gpc$V2[col == 1], xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[col == 4], gpc$V2[col == 4], xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = 4, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[col == 8], gpc$V2[col == 8], xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = 8, main = "")
abline(0, 1, NULL, NULL, col = 2)
dev.off()
point_to_line_dist <- function(coordinate, slope, intercept) {
b = c(1, intercept+slope)
c = c(-intercept/slope,0)
v1 <- b - c
v2 <- coordinate - b
m <- cbind(v1,v2)
return(abs(det(m))/sqrt(sum(v1*v1)))}
point_to_line_dist(c(2, 1), 1, 0)
point_to_line_dist(c(2, 1\2), 1, 0)
point_to_line_dist(c(2, 2), 1, 0)
point_to_line_dist(c(3, 1), 1, 0)
plot(density(point_to_line_dist()))
coord <- cbind(cpg$V2, gpc$V2)
plot(coord)
dev.off()
dist <- lapply(1:nrow(coord), function(i, c) point_to_line_dist(c[i, ], 1, 0))
dist <- lapply(1:nrow(coord), function(i, coord) point_to_line_dist(coord[i, ], 1, 0), coord=coord)
plot(density(unlist(dist)))
dist <- unlist(lapply(1:nrow(coord), function(i, coord) point_to_line_dist(coord[i, ], 1, 0), coord=coord))
plot(density(dist[col == 1]))
lines(density(dist[col == 4]), col = 4)
lines(density(dist[col == 8]), col = 8)
plot(ecdf(dist[col == 1]))
lines(ecdf(dist[col == 4]), col = 4)
lines(ecdf(dist[col == 8]), col = 8)
plot(density(dist[col == 1]), xlim = c(0, 3))
lines(density(dist[col == 4]), col = 4)
lines(density(dist[col == 8]), col = 8)
plot(density(dist[col == 1]), xlim = c(0, max(dist)))
lines(density(dist[col == 4]), col = 4)
lines(density(dist[col == 8]), col = 8)
plot(ecdf(dist[col == 1]), do.points = F)
lines(ecdf(dist[col == 4]), do.points = F, col = 4)
lines(ecdf(dist[col == 8]), do.points = F, col = 8)
plot(ecdf(dist[col == 1]), do.points = F, xlim = c(0, max(dist)))
lines(ecdf(dist[col == 4]), do.points = F, col = 4)
lines(ecdf(dist[col == 8]), do.points = F, col = 8)
lines(ecdf(dist), do.points = F, col = 2)
pdf("r9.4_450bps.6mer.template.model.pdf", width = 10, height = 5)
par(mfrow = c(2, 4), mar = c(5, 5, 1, 1))
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(gpc$V2[match(native$V1, gpc$V1)], native$V2, xlab = "gpc model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
col <- rep(0, nrow(cpg))
col[!grepl("M", cpg$V1)] <- 1#all native
col[col != 1 & !grepl("C", cpg$V1) & grepl("MG", cpg$V1) & !grepl("MA", cpg$V1) & !grepl("MT", cpg$V1) & !grepl("MM", cpg$V1)] <- 4#MG
col[col == 0] <- 8#M-containing but not MG
plot(cpg$V2, gpc$V2, xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = col, main = "")
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("all-native", "MG", "others"), fill = c(1, 4, 8), bty = "n", border = NA)
coord <- cbind(cpg$V2, gpc$V2)
dist <- unlist(lapply(1:nrow(coord), function(i, coord) point_to_line_dist(coord[i, ], 1, 0), coord=coord))
plot(ecdf(dist[col == 1]), do.points = F, xlim = c(0, max(dist)))
lines(ecdf(dist[col == 4]), do.points = F, col = 4)
lines(ecdf(dist[col == 8]), do.points = F, col = 8)
plot(cpg$V2[col == 1], gpc$V2[col == 1], xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[col == 4], gpc$V2[col == 4], xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = 4, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[col == 8], gpc$V2[col == 8], xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = 8, main = "")
abline(0, 1, NULL, NULL, col = 2)
dev.off()
cpg <- read.delim("r9.4_450bps.cpg.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
gpc <- read.delim("r9.4_450bps.gpc.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- read.delim("r9.4_450bps.nucleotide.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- native[-1, ]
point_to_line_dist <- function(coordinate, slope, intercept) {
b = c(1, intercept+slope)
c = c(-intercept/slope,0)
v1 <- b - c
v2 <- coordinate - b
m <- cbind(v1,v2)
return(abs(det(m))/sqrt(sum(v1*v1)))}
pdf("r9.4_450bps.6mer.template.model.pdf", width = 10, height = 5)
par(mfrow = c(2, 4), mar = c(5, 5, 1, 1))
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(gpc$V2[match(native$V1, gpc$V1)], native$V2, xlab = "gpc model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
col <- rep(0, nrow(cpg))
col[!grepl("M", cpg$V1)] <- 1#all native
col[col != 1 & !grepl("C", cpg$V1) & grepl("MG", cpg$V1) & !grepl("MA", cpg$V1) & !grepl("MT", cpg$V1) & !grepl("MM", cpg$V1)] <- 4#MG
col[col == 0] <- 8#M-containing but not MG
plot(cpg$V2, gpc$V2, xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = col, main = "")
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("all-native", "MG", "others"), fill = c(1, 4, 8), bty = "n", border = NA)
coord <- cbind(cpg$V2, gpc$V2)
dist <- unlist(lapply(1:nrow(coord), function(i, coord) point_to_line_dist(coord[i, ], 1, 0), coord=coord))
plot(ecdf(dist[col == 1]), do.points = F, xlim = c(0, max(dist)), main = "")
lines(ecdf(dist[col == 4]), do.points = F, col = 4)
lines(ecdf(dist[col == 8]), do.points = F, col = 8)
plot(cpg$V2[col == 1], gpc$V2[col == 1], xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[col == 4], gpc$V2[col == 4], xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = 4, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[col == 8], gpc$V2[col == 8], xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = 8, main = "")
abline(0, 1, NULL, NULL, col = 2)
dev.off()
q()
getwd()
cpg <- read.delim("r9.4_450bps.cpg.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
dim(cpg)
cpg[1:5, ]
col <- rep(0, nrow(cpg))
col[!grepl("M", cpg$V1)] <- 1#all native
col[col != 1 & !grepl("C", cpg$V1) & grepl("MG", cpg$V1) & !grepl("MA", cpg$V1) & !grepl("MT", cpg$V1) & !grepl("MM", cpg$V1)] <- 4#MG
col[col == 0] <- 8#M-containing but not MG
table(col)
cpg <- cpg[col == 4, ]
cpg[1:5, ]
write.csv(cpg, file = "r9.4_450bps.cpg.mg.6mer.template.model", quote = F)
write.csv(cpg, file = "r9.4_450bps.cpg.mg.6mer.template.model", quote = F, row.names = F, col.names = F)
?write.table
write.table(cpg, file = "r9.4_450bps.cpg.mg.6mer.template.model", quote = F, row.names = F, col.names = F)
22*6
q()
native <- read.delim("./original/r9.4_450bps.nucleotide.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native[1:5, ]
native <- native[-1, ]
write.table(native, file = "./processed/r9.4_450bps.nucleotide.6mer.template.model", quote = F, row.names = F, col.names = F)
cpg <- read.delim("./original/r9.4_450bps.cpg.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
gpc <- read.delim("./original/r9.4_450bps.gpc.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- read.delim("./original/r9.4_450bps.nucleotide.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- native[-1, ]
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(gpc$V2[match(native$V1, gpc$V1)], native$V2, xlab = "gpc model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[col == 1], gpc$V2[col == 1], xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2, gpc$V2, xlab = "cpg model", ylab = "gpc model", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
m_kmer <- grepl("M", cpg$V1)
sum(m_kmer)
11529+4096
mker
m_kmer
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
m_kmer[1:10]
gsub("M", "C", m_kmer[1:10])
match(1:3, 1:10)
plot(cpg$V2[match(m_kmer, cpg$V1)], native$V2[match(c_kmer, native$V1)], xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
c_kmer <- gsub("M", "C", m_kmer[1:10])
plot(cpg$V2[match(m_kmer, cpg$V1)], native$V2[match(c_kmer, native$V1)], xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
c_kmer <- gsub("M", "C", m_kmer[1:10])
plot(cpg$V2[match(cpg$V1, m_kmer)], native$V2[match(native$V1, c_kmer)], xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
length(m_kmer)
length(c_kmer)
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
c_kmer <- gsub("M", "C", m_kmer)
plot(cpg$V2[match(m_kmer, cpg$V1)], native$V2[match(c_kmer, native$V1)], xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
sum(duplicated(c_kmer))
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
c_kmer <- gsub("M", "C", m_kmer)
plot(cpg$V2[match(m_kmer, cpg$V1)], cpg$V2[match(c_kmer, cpg$V1)], xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
c_kmer <- gsub("M", "C", m_kmer)
plot(cpg$V2[match(m_kmer, cpg$V1)], native$V2[match(c_kmer, native$V1)], xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(density(cpg$V2[match(m_kmer, cpg$V1)] - native$V2[match(c_kmer, native$V1)]))
cpg$V2[match(m_kmer, cpg$V1)] - native$V2[match(c_kmer, native$V1)])
cpg$V2[match(m_kmer, cpg$V1)] - native$V2[match(c_kmer, native$V1)]
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
c_kmer <- gsub("M", "C", m_kmer)
cpg$V2[match(m_kmer, cpg$V1)] - native$V2[match(c_kmer, native$V1)]
class(cpg$V2)
cpg$V2[match(m_kmer, cpg$V1)]
native$V2[match(c_kmer, native$V1)]
cpg <- read.delim("./original/r9.4_450bps.cpg.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
gpc <- read.delim("./original/r9.4_450bps.gpc.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- read.delim("./original/r9.4_450bps.nucleotide.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- native[-1, ]
class(native$V2)
native$V2
cpg <- read.delim("./original/r9.4_450bps.cpg.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
gpc <- read.delim("./original/r9.4_450bps.gpc.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- read.delim("./original/r9.4_450bps.nucleotide.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
c_kmer <- gsub("M", "C", m_kmer)
plot(cpg$V2[match(m_kmer, cpg$V1)], native$V2[match(c_kmer, native$V1)], xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(density(cpg$V2[match(m_kmer, cpg$V1)] - native$V2[match(c_kmer, native$V1)]))
plot(density(abs(cpg$V2[match(m_kmer, cpg$V1)] - native$V2[match(c_kmer, native$V1)])))
plot(density(log2(abs(cpg$V2[match(m_kmer, cpg$V1)] - native$V2[match(c_kmer, native$V1)]))))
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
c_kmer <- gsub("M", "C", m_kmer)
pdf("r9.4_450bps.6mer.template.model.pdf", width = 12, height = 4)
par(mfrow = c(1, 3), mar = c(5, 5, 1, 1))
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "cpg model", ylab = "native model", pch = 16, cex = 0.5, main = "native kmers")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[match(m_kmer, cpg$V1)], native$V2[match(c_kmer, native$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (native)", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[match(m_kmer, cpg$V1)], cpg$V2[match(c_kmer, cpg$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (cpg)", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
dev.off()
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
c_kmer <- gsub("M", "C", m_kmer)
pdf("r9.4_450bps.6mer.template.model.pdf", width = 12, height = 4)
par(mfrow = c(1, 3), mar = c(5, 5, 1, 1))
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "native kmers (cpg)", ylab = "native kmers (native)", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[match(m_kmer, cpg$V1)], native$V2[match(c_kmer, native$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (native)", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[match(m_kmer, cpg$V1)], cpg$V2[match(c_kmer, cpg$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (cpg)", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
dev.off()
range(abs(cpg$V2[match(m_kmer, cpg$V1)] - cpg$V2[match(c_kmer, cpg$V1)]))
flag = abs(cpg$V2[match(m_kmer, cpg$V1)] - cpg$V2[match(c_kmer, cpg$V1)]) >= 2
plot(cpg$V2[match(m_kmer, cpg$V1)], cpg$V2[match(c_kmer, cpg$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (cpg)", pch = 16, cex = 0.5, col = flag+1, main = "")
abline(0, 1, NULL, NULL, col = 2)
flag = abs(cpg$V2[match(m_kmer, cpg$V1)] - cpg$V2[match(c_kmer, cpg$V1)]) >= 2
plot(cpg$V2[match(m_kmer, cpg$V1)], cpg$V2[match(c_kmer, cpg$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (cpg)", pch = 16, cex = 0.5, col = c(1, 4)[flag], main = "")
abline(0, 1, NULL, NULL, col = 2)
flag = abs(cpg$V2[match(m_kmer, cpg$V1)] - cpg$V2[match(c_kmer, cpg$V1)]) >= 2
plot(cpg$V2[match(m_kmer, cpg$V1)], cpg$V2[match(c_kmer, cpg$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (cpg)", pch = 16, cex = 0.5, col = c(1, 4)[flag+1], main = "")
abline(0, 1, NULL, NULL, col = 2)
cpg <- read.delim("./original/r9.4_450bps.cpg.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- read.delim("./original/r9.4_450bps.nucleotide.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
c_kmer <- gsub("M", "C", m_kmer)
pdf("r9.4_450bps.6mer.template.model.pdf", width = 12, height = 4)
par(mfrow = c(1, 3), mar = c(5, 5, 1, 1))
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "native kmers (cpg)", ylab = "native kmers (native)", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[match(m_kmer, cpg$V1)], native$V2[match(c_kmer, native$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (native)", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
flag = abs(cpg$V2[match(m_kmer, cpg$V1)] - cpg$V2[match(c_kmer, cpg$V1)]) >= 2
plot(cpg$V2[match(m_kmer, cpg$V1)], cpg$V2[match(c_kmer, cpg$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (cpg)", pch = 16, cex = 0.5, col = c(1, 4)[flag+1], main = "")
abline(0, 1, NULL, NULL, col = 2)
dev.off()
write.table(native, file = "./processed/r9.4_450bps.nucleotide.6mer.template.model", quote = F, row.names = F, col.names = F)
cpg <- cpg[flag, ]
write.table(cpg, file = "r9.4_450bps.cpg.s6mer.template.model", quote = F, row.names = F, col.names = F)
cpg <- read.delim("./original/r9.4_450bps.cpg.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- read.delim("./original/r9.4_450bps.nucleotide.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
c_kmer <- gsub("M", "C", m_kmer)
pdf("r9.4_450bps.6mer.template.model.pdf", width = 9, height = 3)
par(mfrow = c(1, 3), mar = c(5, 5, 1, 1))
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "native kmers (cpg)", ylab = "native kmers (native)", pch = 16, cex = 0.5, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[match(m_kmer, cpg$V1)], native$V2[match(c_kmer, native$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (native)", pch = 16, cex = 0.5, col = 1, main = "")
abline(0, 1, NULL, NULL, col = 2)
flag = abs(cpg$V2[match(m_kmer, cpg$V1)] - cpg$V2[match(c_kmer, cpg$V1)]) >= 2
plot(cpg$V2[match(m_kmer, cpg$V1)], cpg$V2[match(c_kmer, cpg$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (cpg)", pch = 16, cex = 0.5, col = c(1, 4)[flag+1], main = "")
abline(0, 1, NULL, NULL, col = 2)
dev.off()
write.table(native, file = "./processed/r9.4_450bps.nucleotide.6mer.template.model", quote = F, row.names = F, col.names = F)
cpg <- cpg[flag, ]
write.table(cpg, file = "./processed/r9.4_450bps.cpg.s6mer.template.model", quote = F, row.names = F, col.names = F)
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "native kmers (cpg)", ylab = "native kmers (native)", pch = 16, cex = 0.5, cex.labs = 2, main = "")
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "native kmers (cpg)", ylab = "native kmers (native)", pch = 16, cex = 0.5, cex.lab = 2, main = "")
cpg <- read.delim("./original/r9.4_450bps.cpg.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- read.delim("./original/r9.4_450bps.nucleotide.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
c_kmer <- gsub("M", "C", m_kmer)
pdf("r9.4_450bps.6mer.template.model.pdf", width = 12, height = 4)
par(mfrow = c(1, 3), mar = c(5, 5, 1, 1))
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "native kmers (cpg)", ylab = "native kmers (native)", pch = 16, cex = 0.5, cex.lab = 2, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[match(m_kmer, cpg$V1)], native$V2[match(c_kmer, native$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (native)", pch = 16, cex = 0.5, cex.lab = 2, main = "")
abline(0, 1, NULL, NULL, col = 2)
flag = abs(cpg$V2[match(m_kmer, cpg$V1)] - cpg$V2[match(c_kmer, cpg$V1)]) >= 2
plot(cpg$V2[match(m_kmer, cpg$V1)], cpg$V2[match(c_kmer, cpg$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (cpg)", pch = 16, cex = 0.5, cex.lab = 2, col = c(1, 4)[flag+1], main = "")
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("included", "excluded"), fill = c(4, 1), cex = 2, bty = "n", border = NA)
dev.off()
write.table(native, file = "./processed/r9.4_450bps.nucleotide.6mer.template.model", quote = F, row.names = F, col.names = F)
cpg <- cpg[flag, ]
write.table(cpg, file = "./processed/r9.4_450bps.cpg.s6mer.template.model", quote = F, row.names = F, col.names = F)
cpg <- read.delim("./original/r9.4_450bps.cpg.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- read.delim("./original/r9.4_450bps.nucleotide.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
c_kmer <- gsub("M", "C", m_kmer)
pdf("r9.4_450bps.6mer.template.model.pdf", width = 12, height = 4)
par(mfrow = c(1, 3), mar = c(5, 5, 1, 1))
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "native kmers (cpg)", ylab = "native kmers (native)", pch = 16, cex = 0.5, cex.lab = 2, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[match(m_kmer, cpg$V1)], native$V2[match(c_kmer, native$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (native)", pch = 16, cex = 0.5, cex.lab = 2, main = "")
abline(0, 1, NULL, NULL, col = 2)
flag = abs(cpg$V2[match(m_kmer, cpg$V1)] - cpg$V2[match(c_kmer, cpg$V1)]) >= 2
plot(cpg$V2[match(m_kmer, cpg$V1)], cpg$V2[match(c_kmer, cpg$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (cpg)", pch = 16, cex = 0.5, cex.lab = 2, col = c(1, 4)[flag+1], main = "")
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("included", "excluded"), fill = c(4, 1), cex = 2, bty = "n", border = NA)
dev.off()
write.table(native, file = "./processed/r9.4_450bps.nucleotide.6mer.template.model", quote = F, row.names = F, col.names = F)
cpg <- cpg[match(m_kmer, cpg$V1), ][flag, ]
write.table(cpg, file = "./processed/r9.4_450bps.cpg.s6mer.template.model", quote = F, row.names = F, col.names = F)
dim(cpg)
grepl("MG", cpg$V1)
sum(grepl("MG", cpg$V1))
sum(grepl("C", cpg$V1))
sum(!grepl("M", cpg$V1))
q()
cpg <- read.delim("./original/r9.4_450bps.cpg.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- read.delim("../ont_models/r9.4_180mv_450bps_6mer_DNA.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
c_kmer <- gsub("M", "C", m_kmer)
pdf("r9.4_450bps.6mer.template.model.pdf", width = 12, height = 4)
par(mfrow = c(1, 3), mar = c(5, 5, 1, 1))
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "native kmers (cpg)", ylab = "native kmers (native)", pch = 16, cex = 0.5, cex.lab = 2, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[match(m_kmer, cpg$V1)], native$V2[match(c_kmer, native$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (native)", pch = 16, cex = 0.5, cex.lab = 2, main = "")
abline(0, 1, NULL, NULL, col = 2)
flag = abs(cpg$V2[match(m_kmer, cpg$V1)] - cpg$V2[match(c_kmer, cpg$V1)]) >= 2
plot(cpg$V2[match(m_kmer, cpg$V1)], cpg$V2[match(c_kmer, cpg$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (cpg)", pch = 16, cex = 0.5, cex.lab = 2, col = c(1, 4)[flag+1], main = "")
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("included", "excluded"), fill = c(4, 1), cex = 2, bty = "n", border = NA)
dev.off()
cpg <- read.delim("./original/r9.4_450bps.cpg.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- read.delim("../ont_models/r9.4_180mv_450bps_6mer_DNA.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
c_kmer <- gsub("M", "C", m_kmer)
pdf("r9.4_450bps.6mer.template.model.pdf", width = 12, height = 4)
par(mfrow = c(1, 3), mar = c(5, 5, 1, 1))
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "native kmers (cpg)", ylab = "native kmers (ont)", pch = 16, cex = 0.5, cex.lab = 2, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[match(m_kmer, cpg$V1)], native$V2[match(c_kmer, native$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (ont)", pch = 16, cex = 0.5, cex.lab = 2, main = "")
abline(0, 1, NULL, NULL, col = 2)
flag = abs(cpg$V2[match(m_kmer, cpg$V1)] - cpg$V2[match(c_kmer, cpg$V1)]) >= 2
plot(cpg$V2[match(m_kmer, cpg$V1)], cpg$V2[match(c_kmer, cpg$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (cpg)", pch = 16, cex = 0.5, cex.lab = 2, col = c(1, 4)[flag+1], main = "")
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("included", "excluded"), fill = c(4, 1), cex = 2, bty = "n", border = NA)
dev.off()
cpg <- cpg[match(m_kmer, cpg$V1), ][flag, ]
write.table(cpg, file = "./processed/r9.4_450bps.cpg.s6mer.template.model", quote = F, row.names = F, col.names = F)
q()
cpg <- read.delim("./original/r9.4_450bps.cpg.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- read.delim("../ont_models/r9.4_180mv_450bps_6mer_DNA.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
cpg
flag <- rep(0, nrow(cpg))
m_kmer <- cpg$V1[grepl("M", cpg$V1)]
length(flag)
flag[grepl("MG", cpg$V1)] <- 1
table(flag)
flag[flag == 1 & grepl("C", cpg$V1)] <- 0
table(flag)
flag <- rep(0, nrow(cpg))
flag[grepl("MG", cpg$V1) & !grepl("MA", cpg$V1) & !grepl("MT", cpg$V1) & !grepl("MM", cpg$V1) & !grepl("MC", cpg$V1)] <- 1
flag[flag == 1 & grepl("C", cpg$V1)] <- 0
table(flag)
plot(cpg$V2[match(native$V1, cpg$V1)], native$V2, xlab = "native kmers (cpg)", ylab = "native kmers (ont)", pch = 16, cex = 0.5, cex.lab = 2, main = "")
abline(0, 1, NULL, NULL, col = 2)
plot(cpg$V2[match(m_kmer, cpg$V1)], native$V2[match(c_kmer, native$V1)], xlab = "mC kmers (cpg)", ylab = "native kmers (ont)", pch = 16, cex = 0.5, cex.lab = 2, main = "")
kmers <- setdiff(cpg$V1[flag == 1], native$V1)
kmers
kmers <- intersect(native$V1, gatc$V1)
plot(cpg$V2[match(kmers, cpg$V1)], native$V2[match(kmers, native$V1)], xlab = "native kmers (cpg)", ylab = "native kmers (ont)", pch = 16, cex = 0.5, cex.lab = 2, main = "")
kmers <- setdiff(cpg$V1[flag == 1], native$V1)
lines(cpg$V2[match(kmers, cpg$V1)], native$V2[match(gsub("M", "C", kmers), native$V1)], type = "p", pch = 16, cex = 0.5, col = 4)
kmers <- intersect(native$V1, cpg$V1)
plot(cpg$V2[match(kmers, cpg$V1)], native$V2[match(kmers, native$V1)], xlab = "native kmers (cpg)", ylab = "native kmers (ont)", pch = 16, cex = 0.5, cex.lab = 2, main = "")
kmers <- setdiff(cpg$V1[flag == 1], native$V1)
lines(cpg$V2[match(kmers, cpg$V1)], native$V2[match(gsub("M", "C", kmers), native$V1)], type = "p", pch = 16, cex = 0.5, col = 4)
abline(0, 1, NULL, NULL, col = 2)
cpg <- read.delim("./original/r9.4_450bps.cpg.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- read.delim("../ont_models/r9.4_180mv_450bps_6mer_DNA.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
flag <- rep(0, nrow(cpg))
flag[grepl("MG", cpg$V1) & !grepl("MA", cpg$V1) & !grepl("MT", cpg$V1) & !grepl("MM", cpg$V1) & !grepl("MC", cpg$V1)] <- 1
flag[flag == 1 & grepl("C", cpg$V1)] <- 0
pdf("nanopolish.model.pdf", width = 12, height = 4)
par(mfrow = c(1, 3), mar = c(5, 5, 1, 1))
kmers <- intersect(native$V1, cpg$V1)
plot(cpg$V2[match(kmers, cpg$V1)], native$V2[match(kmers, native$V1)], xlab = "cpg", ylab = "ont", pch = 16, cex = 0.5, cex.lab = 2, main = "")
kmers <- setdiff(cpg$V1[flag == 1], native$V1)
lines(cpg$V2[match(kmers, cpg$V1)], native$V2[match(gsub("M", "C", kmers), native$V1)], type = "p", pch = 16, cex = 0.5, col = 4)
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("native", "MG"), fill = c(1, 4), bty = "n", border = NA)
dev.off()
pdf("nanopolish.model.pdf", width = 5, height = 5)
par(mar = c(5, 5, 1, 1))
kmers <- intersect(native$V1, cpg$V1)
plot(cpg$V2[match(kmers, cpg$V1)], native$V2[match(kmers, native$V1)], xlab = "cpg", ylab = "ont", pch = 16, cex = 0.5, cex.lab = 2, main = "")
kmers <- setdiff(cpg$V1[flag == 1], native$V1)
lines(cpg$V2[match(kmers, cpg$V1)], native$V2[match(gsub("M", "C", kmers), native$V1)], type = "p", pch = 16, cex = 0.5, col = 4)
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("native", "MG"), fill = c(1, 4), bty = "n", border = NA)
dev.off()
q()
cpg <- read.delim("./original/r9.4_450bps.cpg.6mer.template.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
native <- read.delim("../ont_models/r9.4_180mv_450bps_6mer_DNA.model", header=FALSE, comment.char="#", stringsAsFactors=FALSE)
flag <- rep(0, nrow(cpg))
flag[grepl("MG", cpg$V1) & !grepl("MA", cpg$V1) & !grepl("MT", cpg$V1) & !grepl("MM", cpg$V1) & !grepl("MC", cpg$V1)] <- 1
flag[flag == 1 & grepl("C", cpg$V1)] <- 0
kmers <- intersect(native$V1, cpg$V1)
plot(cpg$V2[match(kmers, cpg$V1)], native$V2[match(kmers, native$V1)], xlab = "cpg", ylab = "ont", pch = 16, cex = 0.5, cex.lab = 2, main = "")
kmers <- setdiff(cpg$V1[flag == 1], native$V1)
lines(cpg$V2[match(kmers, cpg$V1)], native$V2[match(gsub("M", "C", kmers), native$V1)], type = "p", pch = 16, cex = 0.5, col = 4)
abline(0, 1, NULL, NULL, col = 2)
legend("topleft", legend = c("native", "MG"), fill = c(1, 4), bty = "n", border = NA)
table <- cpg[flag == 1, ]
table
dim(table)
write.table(table, file = "./processed/r9.4_450bps.cpg.6mer.template.model", quote = F, row.names = F, col.names = F)
q()
q()
